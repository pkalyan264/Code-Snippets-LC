// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends



class Solution
{
    
    public:
    class meeting
    {
        public:
        int start;
        int end;
        int index;
    };
    static bool comparator(meeting m1,meeting m2)
    {
        if(m1.end<m2.end)return true;
        else if(m1.end>m2.end)return false;
        if(m1.end==m2.end){return m1.index<m2.index;}
    }
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    int maxMeetings(int start[], int end[], int n)
    {
        // Your code here
        vector<meeting>meet;
        for(int i=0;i<n;i++)
        {
            meeting temp;
            temp.start=start[i];
            temp.end=end[i];
            temp.index=i+1;
            meet.push_back(temp);
        }
        sort(meet.begin(),meet.end(),comparator);
        int limit=meet[0].end;
        vector<int>ans;
        ans.push_back(meet[0].index);
        for(int i=1;i<n;i++)
        {
            if(meet[i].start>limit)
            {
                ans.push_back(meet[i].index);
                limit=meet[i].end;
            }
        }
        return ans.size();
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int start[n], end[n];
        for (int i = 0; i < n; i++) cin >> start[i];

        for (int i = 0; i < n; i++) cin >> end[i];

        Solution ob;
        int ans = ob.maxMeetings(start, end, n);
        cout << ans << endl;
    }
    return 0;
}  // } Driver Code Ends
